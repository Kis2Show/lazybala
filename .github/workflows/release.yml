name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag'
        required: true
        type: string

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      tag_name: ${{ steps.get_tag.outputs.tag }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Get tag name
      id: get_tag
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "tag=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
        else
          echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        fi

    - name: Generate changelog
      id: changelog
      run: |
        # ÁîüÊàêÂèòÊõ¥Êó•Âøó
        if git tag --list | grep -q "${{ steps.get_tag.outputs.tag }}"; then
          PREVIOUS_TAG=$(git tag --sort=-version:refname | grep -A1 "${{ steps.get_tag.outputs.tag }}" | tail -1)
          if [ -n "$PREVIOUS_TAG" ] && [ "$PREVIOUS_TAG" != "${{ steps.get_tag.outputs.tag }}" ]; then
            CHANGELOG=$(git log --pretty=format:"- %s (%h)" $PREVIOUS_TAG..${{ steps.get_tag.outputs.tag }})
          else
            CHANGELOG=$(git log --pretty=format:"- %s (%h)" ${{ steps.get_tag.outputs.tag }})
          fi
        else
          CHANGELOG="Initial release"
        fi

        echo "changelog<<EOF" >> $GITHUB_OUTPUT
        echo "$CHANGELOG" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.get_tag.outputs.tag }}
        name: LazyBala ${{ steps.get_tag.outputs.tag }}
        generate_release_notes: true
        body: |
          ## üéâ LazyBala ${{ steps.get_tag.outputs.tag }}

          LazyBala ÊòØ‰∏Ä‰∏™Âü∫‰∫é Go ÂíåÁ∫Ø JavaScript ÁöÑÂ™í‰Ωì‰∏ãËΩΩÂ∫îÁî®ÔºåÊîØÊåÅ Bilibili Á≠âÂπ≥Âè∞ÁöÑÈü≥È¢ë‰∏ãËΩΩ„ÄÇ

          ### üìã ÂèòÊõ¥ÂÜÖÂÆπ
          ${{ steps.changelog.outputs.changelog }}

          ### üì¶ ‰∏ãËΩΩ‰∫åËøõÂà∂Êñá‰ª∂

          ÈÄâÊã©ÈÄÇÂêàÊÇ®Á≥ªÁªüÁöÑÁâàÊú¨Ôºö

          | Êìç‰ΩúÁ≥ªÁªü | Êû∂ÊûÑ | ‰∏ãËΩΩÈìæÊé• |
          |----------|------|----------|
          | üêß Linux | x64 | [lazybala-linux-amd64.tar.gz](https://github.com/${{ github.repository }}/releases/download/${{ steps.get_tag.outputs.tag }}/lazybala-linux-amd64.tar.gz) |
          | üêß Linux | ARM64 | [lazybala-linux-arm64.tar.gz](https://github.com/${{ github.repository }}/releases/download/${{ steps.get_tag.outputs.tag }}/lazybala-linux-arm64.tar.gz) |
          | üêß Linux | ARMv7 | [lazybala-linux-armv7.tar.gz](https://github.com/${{ github.repository }}/releases/download/${{ steps.get_tag.outputs.tag }}/lazybala-linux-armv7.tar.gz) |
          | ü™ü Windows | x64 | [lazybala-windows-amd64.exe.zip](https://github.com/${{ github.repository }}/releases/download/${{ steps.get_tag.outputs.tag }}/lazybala-windows-amd64.exe.zip) |
          | ü™ü Windows | ARM64 | [lazybala-windows-arm64.exe.zip](https://github.com/${{ github.repository }}/releases/download/${{ steps.get_tag.outputs.tag }}/lazybala-windows-arm64.exe.zip) |
          | üçé macOS | x64 | [lazybala-darwin-amd64.tar.gz](https://github.com/${{ github.repository }}/releases/download/${{ steps.get_tag.outputs.tag }}/lazybala-darwin-amd64.tar.gz) |
          | üçé macOS | Apple Silicon | [lazybala-darwin-arm64.tar.gz](https://github.com/${{ github.repository }}/releases/download/${{ steps.get_tag.outputs.tag }}/lazybala-darwin-arm64.tar.gz) |
          | üîß FreeBSD | x64 | [lazybala-freebsd-amd64.tar.gz](https://github.com/${{ github.repository }}/releases/download/${{ steps.get_tag.outputs.tag }}/lazybala-freebsd-amd64.tar.gz) |

          ### üîê Ê†°È™åÂíå

          ÊØè‰∏™‰∏ãËΩΩÊñá‰ª∂ÈÉΩÊèê‰æõ‰∫Ü SHA256 Ê†°È™åÂíåÔºåÁî®‰∫éÈ™åËØÅÊñá‰ª∂ÂÆåÊï¥ÊÄßÔºö
          - ‰∏ãËΩΩÂØπÂ∫îÁöÑ `.sha256` Êñá‰ª∂
          - ‰ΩøÁî® `sha256sum -c filename.sha256` È™åËØÅ

          ### üöÄ Âø´ÈÄüÂºÄÂßã

          #### ‰∫åËøõÂà∂Êñá‰ª∂‰ΩøÁî®
          ```bash
          # Linux/macOS
          tar -xzf lazybala-linux-amd64.tar.gz
          chmod +x lazybala-linux-amd64
          ./lazybala-linux-amd64

          # Windows (PowerShell)
          Expand-Archive lazybala-windows-amd64.exe.zip
          .\lazybala-windows-amd64.exe
          ```

          #### Docker ‰ΩøÁî®
          ```bash
          # ÊãâÂèñÈïúÂÉè
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.get_tag.outputs.tag }}

          # ËøêË°åÂÆπÂô®
          docker run -d \
            --name lazybala \
            -p 8080:8080 \
            -v ./data/audiobooks:/app/audiobooks \
            -v ./data/config:/app/config \
            -v ./data/cookies:/app/cookies \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.get_tag.outputs.tag }}
          ```

          #### Docker Compose ‰ΩøÁî®
          ```bash
          # ‰∏ãËΩΩÈÖçÁΩÆÊñá‰ª∂
          curl -O https://raw.githubusercontent.com/${{ github.repository }}/${{ steps.get_tag.outputs.tag }}/docker-compose.yml

          # ÂêØÂä®ÊúçÂä°
          docker-compose up -d
          ```

          ### üåê ËÆøÈóÆÂ∫îÁî®

          ÂêØÂä®ÂêéËÆøÈóÆÔºöhttp://localhost:8080

          ### ‚ú® ‰∏ªË¶ÅÁâπÊÄß

          - üéµ ÊîØÊåÅ Bilibili Èü≥È¢ë‰∏ãËΩΩ
          - üîê QR Á†ÅÁôªÂΩïËÆ§ËØÅ
          - üì± ÂìçÂ∫îÂºè Web ÁïåÈù¢
          - üê≥ Docker ÂÆπÂô®ÂåñÈÉ®ÁΩ≤
          - üåç Â§öÂπ≥Âè∞ÊîØÊåÅ
          - üìä ÂÆûÊó∂‰∏ãËΩΩËøõÂ∫¶
          - üìù ‰∏ãËΩΩÂéÜÂè≤ÁÆ°ÁêÜ

          ### üìñ ÊñáÊ°£

          - [üìö ‰ΩøÁî®ËØ¥Êòé](https://github.com/${{ github.repository }}/blob/${{ steps.get_tag.outputs.tag }}/README.md)
          - [üê≥ Docker ÈÉ®ÁΩ≤ÊåáÂçó](https://github.com/${{ github.repository }}/blob/${{ steps.get_tag.outputs.tag }}/DOCKER.md)
          - [‚öôÔ∏è GitHub Actions ÈÖçÁΩÆ](https://github.com/${{ github.repository }}/blob/${{ steps.get_tag.outputs.tag }}/GITHUB_ACTIONS.md)

          ### üêõ ÈóÆÈ¢òÂèçÈ¶à

          Â¶ÇÊûúÊÇ®ÈÅáÂà∞ÈóÆÈ¢òÔºåËØ∑Ôºö
          1. Êü•Áúã [Issues](https://github.com/${{ github.repository }}/issues) ‰∏≠ÊòØÂê¶ÊúâÁõ∏ÂÖ≥ÈóÆÈ¢ò
          2. Êèê‰∫§Êñ∞ÁöÑ [Issue](https://github.com/${{ github.repository }}/issues/new) Âπ∂ÈôÑ‰∏äËØ¶ÁªÜ‰ø°ÊÅØ

          ### üíù ÊîØÊåÅÈ°πÁõÆ

          Â¶ÇÊûúËøô‰∏™È°πÁõÆÂØπÊÇ®ÊúâÂ∏ÆÂä©ÔºåËØ∑ËÄÉËôëÔºö
          - ‚≠ê ÁªôÈ°πÁõÆÁÇπ‰∏™Êòü
          - üç¥ Fork Âπ∂Ë¥°ÁåÆ‰ª£Á†Å
          - üì¢ ÂàÜ‰∫´ÁªôÊõ¥Â§ö‰∫∫
        draft: false
        prerelease: ${{ contains(steps.get_tag.outputs.tag, '-') }}

  build-binaries:
    name: Build Binaries
    needs: create-release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - goos: linux
            goarch: amd64
            suffix: linux-amd64
            name: Linux x64
          - goos: linux
            goarch: arm64
            suffix: linux-arm64
            name: Linux ARM64
          - goos: linux
            goarch: arm
            goarm: 7
            suffix: linux-armv7
            name: Linux ARMv7
          - goos: windows
            goarch: amd64
            suffix: windows-amd64.exe
            name: Windows x64
          - goos: windows
            goarch: arm64
            suffix: windows-arm64.exe
            name: Windows ARM64
          - goos: darwin
            goarch: amd64
            suffix: darwin-amd64
            name: macOS x64
          - goos: darwin
            goarch: arm64
            suffix: darwin-arm64
            name: macOS ARM64 (Apple Silicon)
          - goos: freebsd
            goarch: amd64
            suffix: freebsd-amd64
            name: FreeBSD x64

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'
        cache: true  # ‰ΩøÁî®ÂÜÖÁΩÆÁºìÂ≠òÔºåÊõ¥Á®≥ÂÆö

    - name: Download dependencies
      run: go mod download

    - name: Build binary
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
        GOARM: ${{ matrix.goarm }}
        CGO_ENABLED: 0
      run: |
        BUILD_TIME=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
        VERSION=${{ needs.create-release.outputs.tag_name }}

        echo "Building for ${{ matrix.name }} (${{ matrix.goos }}/${{ matrix.goarch }})"

        go build \
          -ldflags="-w -s -extldflags '-static' -X main.version=${VERSION} -X main.buildTime=${BUILD_TIME}" \
          -trimpath \
          -o lazybala-${{ matrix.suffix }} .

        # È™åËØÅÊûÑÂª∫ÁªìÊûú
        ls -la lazybala-${{ matrix.suffix }}

        # ÂØπ‰∫éÈùû Windows Âπ≥Âè∞ÔºåÊ£ÄÊü•ÊòØÂê¶‰∏∫ÈùôÊÄÅÈìæÊé•
        if [[ "${{ matrix.goos }}" != "windows" ]]; then
          file lazybala-${{ matrix.suffix }}
          if command -v ldd >/dev/null 2>&1; then
            ldd lazybala-${{ matrix.suffix }} || echo "Static binary confirmed"
          fi
        fi

    - name: Compress binary (Unix)
      if: matrix.goos != 'windows'
      run: |
        tar -czf lazybala-${{ matrix.suffix }}.tar.gz lazybala-${{ matrix.suffix }}
        sha256sum lazybala-${{ matrix.suffix }}.tar.gz > lazybala-${{ matrix.suffix }}.tar.gz.sha256

    - name: Compress binary (Windows)
      if: matrix.goos == 'windows'
      run: |
        zip lazybala-${{ matrix.suffix }}.zip lazybala-${{ matrix.suffix }}
        sha256sum lazybala-${{ matrix.suffix }}.zip > lazybala-${{ matrix.suffix }}.zip.sha256

    - name: Upload release assets
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ needs.create-release.outputs.tag_name }}
        files: |
          lazybala-${{ matrix.suffix }}${{ matrix.goos == 'windows' && '.zip' || '.tar.gz' }}
          lazybala-${{ matrix.suffix }}${{ matrix.goos == 'windows' && '.zip' || '.tar.gz' }}.sha256
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-docker:
    name: Build and Push Docker Images
    needs: create-release
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Verify login
      run: |
        echo "Logged in as: ${{ github.actor }}"
        echo "Registry: ${{ env.REGISTRY }}"
        echo "Image name: ${{ env.IMAGE_NAME }}"

    - name: Log in to Docker Hub
      if: ${{ vars.ENABLE_DOCKERHUB == 'true' }}
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          ${{ vars.ENABLE_DOCKERHUB == 'true' && 'kis2show/lazybala' || '' }}
        tags: |
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=raw,value=latest

    - name: Debug metadata outputs
      run: |
        echo "Tags: ${{ steps.meta.outputs.tags }}"
        echo "Labels: ${{ steps.meta.outputs.labels }}"
        echo "Version: ${{ needs.create-release.outputs.tag_name }}"

    - name: Build and push Docker image
      id: build
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          BUILDTIME=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
          VERSION=${{ needs.create-release.outputs.tag_name }}

    - name: Verify build outputs
      run: |
        echo "Build digest: ${{ steps.build.outputs.digest }}"
        echo "Build metadata: ${{ steps.build.outputs.metadata }}"

    - name: Generate artifact attestation
      if: github.repository_owner == 'Kis2Show' && steps.build.outputs.digest != ''
      continue-on-error: true  # ÂÖÅËÆ∏ attestation Â§±Ë¥•ËÄå‰∏ç‰∏≠Êñ≠Â∑•‰ΩúÊµÅ
      uses: actions/attest-build-provenance@v1
      with:
        subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
        subject-digest: ${{ steps.build.outputs.digest }}
        push-to-registry: true

    - name: Update Docker Hub description
      if: ${{ vars.ENABLE_DOCKERHUB == 'true' }}
      uses: peter-evans/dockerhub-description@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        repository: kis2show/lazybala
        readme-filepath: ./DOCKER.md
