# 群晖专用 Dockerfile
# 使用 root 用户运行以避免权限问题

# 第一阶段：构建 Go 应用
FROM golang:1.23-alpine AS backend-builder

# 设置工作目录
WORKDIR /app

# 安装必要的包
RUN apk add --no-cache git ca-certificates tzdata

# 复制 go mod 文件
COPY go.mod go.sum ./

# 下载依赖
RUN go mod download

# 复制源代码
COPY *.go ./

# 构建应用
ARG VERSION=dev
ARG BUILDTIME
RUN CGO_ENABLED=0 GOOS=linux go build \
    -ldflags="-w -s -X main.version=${VERSION} -X main.buildTime=${BUILDTIME}" \
    -o lazybala .

# 第二阶段：运行时镜像
FROM alpine:latest

# 安装运行时依赖
RUN apk add --no-cache \
    ca-certificates \
    tzdata \
    wget \
    curl \
    ffmpeg \
    && rm -rf /var/cache/apk/*

# 设置工作目录
WORKDIR /app

# 创建必要的目录
RUN mkdir -p /app/audiobooks /app/config /app/cookies /app/bin

# 复制构建的应用
COPY --from=backend-builder /app/lazybala ./

# 复制 HTML 文件
COPY --from=backend-builder /app/*.html ./

# 创建启动脚本
RUN echo '#!/bin/sh\n\
echo "LazyBala (Synology) 启动中..."\n\
echo "检查 yt-dlp 权限..."\n\
if [ -f "/app/bin/yt-dlp" ]; then\n\
    chmod +x /app/bin/yt-dlp 2>/dev/null || true\n\
    echo "yt-dlp 权限检查完成"\n\
fi\n\
echo "启动应用..."\n\
exec ./lazybala' > /usr/local/bin/start.sh && \
    chmod +x /usr/local/bin/start.sh

# 下载最新的 yt-dlp（支持多架构）
ARG TARGETARCH
RUN case "${TARGETARCH}" in \
        "amd64") YT_DLP_FILE="yt-dlp_linux" ;; \
        "arm64") YT_DLP_FILE="yt-dlp_linux_aarch64" ;; \
        "arm") YT_DLP_FILE="yt-dlp_linux_armv7l" ;; \
        *) YT_DLP_FILE="yt-dlp_linux" ;; \
    esac && \
    echo "Downloading yt-dlp for ${TARGETARCH}: ${YT_DLP_FILE}" && \
    wget -O /app/bin/yt-dlp "https://github.com/yt-dlp/yt-dlp/releases/latest/download/${YT_DLP_FILE}" && \
    chmod +x /app/bin/yt-dlp

# 验证 yt-dlp 安装
RUN /app/bin/yt-dlp --version || echo "yt-dlp installation verification failed"

# 创建群晖兼容的用户和组
RUN addgroup -g 100 users || true && \
    adduser -D -u 100 -G users lazybala || true

# 设置目录权限和所有权
RUN chmod -R 755 /app && \
    chmod -R 777 /app/audiobooks /app/config /app/cookies /app/bin && \
    chown -R 100:100 /app

# 暴露端口
EXPOSE 8080

# 设置环境变量
ENV PORT=8080
ENV GIN_MODE=release
ENV PUID=100
ENV PGID=100

# 健康检查
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:8080/ || exit 1

# 数据卷
VOLUME ["/app/audiobooks", "/app/config", "/app/cookies", "/app/bin"]

# 添加标签
LABEL org.opencontainers.image.title="LazyBala (Synology)" \
      org.opencontainers.image.description="A web-based media downloader with bilibili support (Synology optimized)" \
      org.opencontainers.image.vendor="Kis2Show" \
      org.opencontainers.image.licenses="MIT" \
      org.opencontainers.image.source="https://github.com/kis2show/lazybala"

# 切换到群晖兼容用户
USER 100:100

# 启动命令
CMD ["/usr/local/bin/start.sh"]
